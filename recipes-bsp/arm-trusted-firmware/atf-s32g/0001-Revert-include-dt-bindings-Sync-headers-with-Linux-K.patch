From 6b5b03a4e79d76cc1b76a2fbe0df3fdf5f1c3f01 Mon Sep 17 00:00:00 2001
From: Zhantao Tang <zhantao.tang@windriver.com>
Date: Wed, 8 May 2024 04:13:04 +0000
Subject: [PATCH] Revert "include: dt-bindings: Sync headers with Linux Kernel
 v6.6-rt"

This reverts commit 041b695b01203431f3eeefd3036f62c9081c76e3.
Since the above commit will affect qspi flash function, will cause the
following error, when writing data in qspi boot mode:

  # /opt/wr-test/main_test.py -k flash_mmc_admix:"mtd0##mmcblk0p2" -q 
  EXT4-fs (mmcblk0p2): mounted filesystem with ordered data mode. Quota mode: disabled.
  Internal error: synchronous external abort: 0000000096000210 [#1] PREEMPT_RT SMP
  Modules linked in: 8021q llce_mailbox ... 
  CPU: 7 PID: 1471 Comm: dd Tainted: G        W  O       6.1.87-rt18-yocto-preempt-rt #1
  Hardware name: NXP S32G399A-RDB3 (DT)
  pstate: 20000005 (nzCv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)
  pc : __memcpy_fromio+0x50/0xa0
  lr : fsl_qspi_exec_op+0xa24/0xd90
  sp : ffffffc00dfbb640
  x29: ffffffc00dfbb6a0 x28: ffffffc00a08d44c x27: ffffffc008ecb098
  x26: 000000004280000c x25: 00000000c280000c x24: ffffffc00a08d44c
  x23: ffffffc00a08d060 x22: ffffffc00a08d12c x21: 0000000000000000
  x20: ffffffc00dfbba00 x19: ffffff880390e600 x18: 0000000000000000
  x17: 0000000000000000 x16: 0000000000000000 x15: 0000000000000000
  x14: 0000000000000000 x13: 0000000000000000 x12: ffffffc0097a8e80
  x11: ffffffc0097a8e60 x10: 00000000ffffff00 x9 : ffffffc008917954
  x8 : 000000031923b1f0 x7 : 000000006401c744 x6 : 0000000000100000
  x5 : 0000000000000018 x4 : ffffffc020000000 x3 : ffffff8818a00000
  x2 : 0000000000100000 x1 : ffffffc020000000 x0 : ffffff8818900000
  Call trace:
   __memcpy_fromio+0x50/0xa0
   spi_mem_exec_op+0x3bc/0x410
   spi_mem_no_dirmap_read+0xa8/0xc0
   spi_mem_dirmap_read+0xdc/0x144
   spi_nor_read_data+0x11c/0x190
   spi_nor_read+0xbc/0x164
   mtd_read_oob_std+0x80/0x90
   mtd_read_oob+0x9c/0x160
   mtd_read+0x70/0xb0
   mtdchar_read+0xec/0x2c4
   vfs_read+0xcc/0x2c4
   ksys_read+0x7c/0x114
   __arm64_sys_read+0x24/0x30
   invoke_syscall+0x5c/0x130
   el0_svc_common.constprop.0+0x4c/0xf4
   do_el0_svc+0x34/0xc0
   el0_svc+0x2c/0x84
   el0t_64_sync_handler+0xf4/0x120
   el0t_64_sync+0x18c/0x190
  Code: aa0103e4 927df0c6 910020c6 8b060003 (f9400085) 
  ---[ end trace 0000000000000000 ]---

Upstream-Status: Pending

Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 drivers/nxp/s32/clk/s32gen1_scmi_ids.c        |  10 +-
 fdts/s32cc.dtsi                               |   6 +-
 include/dt-bindings/clock/s32cc-scmi-clock.h  | 196 +++++++++---------
 include/dt-bindings/clock/s32g-scmi-clock.h   |   6 +-
 include/dt-bindings/clock/s32r45-scmi-clock.h |  46 ++--
 include/dt-bindings/mux/nxp-s32g-can-ts.h     |   5 +-
 include/dt-bindings/mux/nxp-s32r45-can-ts.h   |   7 +-
 include/dt-bindings/net/s32g-pfe.h            |  10 +-
 include/dt-bindings/nvmem/s32cc-scmi-nvmem.h  |  46 ++--
 include/dt-bindings/nvmem/s32g-gpr-nvmem.h    |  17 +-
 include/dt-bindings/nvmem/s32r45-gpr-nvmem.h  |   9 +-
 include/dt-bindings/perf/s32cc-scmi-perf.h    |   9 +-
 include/dt-bindings/pinctrl/s32cc-pinfunc.h   |   4 +-
 include/dt-bindings/reset/s32cc-scmi-reset.h  |   8 +-
 include/dt-bindings/reset/s32g-scmi-reset.h   |   3 +-
 plat/nxp/s32/s32_scp_utils.c                  |  10 +-
 16 files changed, 192 insertions(+), 200 deletions(-)

diff --git a/drivers/nxp/s32/clk/s32gen1_scmi_ids.c b/drivers/nxp/s32/clk/s32gen1_scmi_ids.c
index ab5de8f48..90cdeeb86 100644
--- a/drivers/nxp/s32/clk/s32gen1_scmi_ids.c
+++ b/drivers/nxp/s32/clk/s32gen1_scmi_ids.c
@@ -1,6 +1,6 @@
 // SPDX-License-Identifier: BSD-3-Clause
 /*
- * Copyright 2020-2024 NXP
+ * Copyright 2020-2023 NXP
  */
 #include <clk/s32gen1_clk_funcs.h>
 #include <clk/s32gen1_scmi_clk.h>
@@ -68,13 +68,13 @@ struct s32gen1_scmi_clk cc_scmi_clk[] = {
 			 S32GEN1_CLK_SPI, "spi_reg"),
 	SCMI_ARRAY_ENTRY(S32CC_SCMI_CLK_SPI_MODULE,
 			 S32GEN1_CLK_SPI, "spi_module"),
-	SCMI_ARRAY_ENTRY(S32CC_SCMI_CLK_QUADSPI_REG,
+	SCMI_ARRAY_ENTRY(S32CC_SCMI_CLK_QSPI_REG,
 			 S32GEN1_CLK_XBAR_DIV3, "qspi_reg"),
-	SCMI_ARRAY_ENTRY(S32CC_SCMI_CLK_QUADSPI_AHB,
+	SCMI_ARRAY_ENTRY(S32CC_SCMI_CLK_QSPI_AHB,
 			 S32GEN1_CLK_XBAR_DIV3, "qspi_ahb"),
-	SCMI_ARRAY_ENTRY(S32CC_SCMI_CLK_QUADSPI_FLASH2X,
+	SCMI_ARRAY_ENTRY(S32CC_SCMI_CLK_QSPI_FLASH2X,
 			 S32GEN1_CLK_QSPI_2X, "qspi_flash2x"),
-	SCMI_ARRAY_ENTRY(S32CC_SCMI_CLK_QUADSPI_FLASH1X,
+	SCMI_ARRAY_ENTRY(S32CC_SCMI_CLK_QSPI_FLASH1X,
 			 S32GEN1_CLK_QSPI, "qspi_flash1x"),
 	SCMI_ARRAY_ENTRY(S32CC_SCMI_CLK_USDHC_AHB,
 			 S32GEN1_CLK_XBAR, "usdhc_ahb"),
diff --git a/fdts/s32cc.dtsi b/fdts/s32cc.dtsi
index 18648d465..15ee06089 100644
--- a/fdts/s32cc.dtsi
+++ b/fdts/s32cc.dtsi
@@ -2,7 +2,7 @@
 /*
  * Device Tree Include file for NXP S32CC family SoCs.
  *
- * Copyright 2019-2024 NXP
+ * Copyright 2019-2023 NXP
  */
 
 #include <dt-bindings/clock/s32gen1-clock-freq.h>
@@ -574,8 +574,8 @@
 			      <0x0 0x00000000 0x0 0x20000000>;
 			reg-names = "QuadSPI", "QuadSPI-memory";
 			clock-names = "qspi_en", "qspi";
-			clocks = <&clks S32CC_SCMI_CLK_QUADSPI_FLASH1X>,
-				 <&clks S32CC_SCMI_CLK_QUADSPI_FLASH1X>;
+			clocks = <&clks S32CC_SCMI_CLK_QSPI_FLASH1X>,
+				 <&clks S32CC_SCMI_CLK_QSPI_FLASH1X>;
 			spi-max-frequency = <200000000>;
 			spi-num-chipselects = <2>;
 			status = "disabled";
diff --git a/include/dt-bindings/clock/s32cc-scmi-clock.h b/include/dt-bindings/clock/s32cc-scmi-clock.h
index c31937142..9ae9bef20 100644
--- a/include/dt-bindings/clock/s32cc-scmi-clock.h
+++ b/include/dt-bindings/clock/s32cc-scmi-clock.h
@@ -1,44 +1,42 @@
-/* SPDX-License-Identifier: GPL-2.0-only OR BSD-3-Clause */
+/* SPDX-License-Identifier: BSD-3-Clause */
 /*
- * Copyright 2020-2024 NXP
+ * Copyright 2020-2023 NXP
  */
-
 #ifndef __DT_BINDINGS_SCMI_CLOCK_S32CC_H
 #define __DT_BINDINGS_SCMI_CLOCK_S32CC_H
 
-#define S32CC_SCMI_COMPLEX_CLK			0xFFFFFFFFU
+#define S32CC_SCMI_COMPLEX_CLK		0xFFFFFFFFU
 #define S32CC_SCMI_NOT_IMPLEMENTED_CLK	0xFFFFFFFEU
 
-#define S32CC_SCMI_CLK_BASE_ID			0U
-#define S32CC_SCMI_CLK(N)				((N) + S32CC_SCMI_CLK_BASE_ID)
-#define S32CC_PLAT_SCMI_CLK(N)			((N) + S32CC_SCMI_PLAT_CLK_BASE_ID)
+#define S32CC_SCMI_CLK_BASE_ID		0U
+#define S32CC_SCMI_CLK(N)		((N) + S32CC_SCMI_CLK_BASE_ID)
+#define S32CC_PLAT_SCMI_CLK(N)		((N) + S32CC_SCMI_PLAT_CLK_BASE_ID)
 
 #define S32CC_SCMI_CLK_VERSION_MAJOR	(1)
 #define S32CC_SCMI_CLK_VERSION_MINOR	(0)
 
 /* A53 */
-#define S32CC_SCMI_CLK_A53				S32CC_SCMI_CLK(0)
-/* SerDes */
-#define S32CC_SCMI_CLK_SERDES_AXI		S32CC_SCMI_CLK(1)
-#define S32CC_SCMI_CLK_SERDES_AUX		S32CC_SCMI_CLK(2)
-#define S32CC_SCMI_CLK_SERDES_APB		S32CC_SCMI_CLK(3)
-#define S32CC_SCMI_CLK_SERDES_REF		S32CC_SCMI_CLK(4)
+#define S32CC_SCMI_CLK_A53		S32CC_SCMI_CLK(0)
+/* SERDES */
+#define S32CC_SCMI_CLK_SERDES_AXI	S32CC_SCMI_CLK(1)
+#define S32CC_SCMI_CLK_SERDES_AUX	S32CC_SCMI_CLK(2)
+#define S32CC_SCMI_CLK_SERDES_APB	S32CC_SCMI_CLK(3)
+#define S32CC_SCMI_CLK_SERDES_REF	S32CC_SCMI_CLK(4)
 /* FTM0 */
-#define S32CC_SCMI_CLK_FTM0_SYS			S32CC_SCMI_CLK(5)
-#define S32CC_SCMI_CLK_FTM0_EXT			S32CC_SCMI_CLK(6)
+#define S32CC_SCMI_CLK_FTM0_SYS		S32CC_SCMI_CLK(5)
+#define S32CC_SCMI_CLK_FTM0_EXT		S32CC_SCMI_CLK(6)
 /* FTM1 */
-#define S32CC_SCMI_CLK_FTM1_SYS			S32CC_SCMI_CLK(7)
-#define S32CC_SCMI_CLK_FTM1_EXT			S32CC_SCMI_CLK(8)
+#define S32CC_SCMI_CLK_FTM1_SYS		S32CC_SCMI_CLK(7)
+#define S32CC_SCMI_CLK_FTM1_EXT		S32CC_SCMI_CLK(8)
 /* FlexCAN */
-#define S32CC_SCMI_CLK_FLEXCAN_REG		S32CC_SCMI_CLK(9)
-#define S32CC_SCMI_CLK_FLEXCAN_SYS		S32CC_SCMI_CLK(10)
-#define S32CC_SCMI_CLK_FLEXCAN_CAN		S32CC_SCMI_CLK(11)
-#define S32CC_SCMI_CLK_FLEXCAN_TS		S32CC_SCMI_CLK(12)
+#define S32CC_SCMI_CLK_FLEXCAN_REG	S32CC_SCMI_CLK(9)
+#define S32CC_SCMI_CLK_FLEXCAN_SYS	S32CC_SCMI_CLK(10)
+#define S32CC_SCMI_CLK_FLEXCAN_CAN	S32CC_SCMI_CLK(11)
+#define S32CC_SCMI_CLK_FLEXCAN_TS	S32CC_SCMI_CLK(12)
 /* LINFlexD */
-#define S32CC_SCMI_CLK_LINFLEX_XBAR		S32CC_SCMI_CLK(13)
-#define S32CC_SCMI_CLK_LINFLEX_LIN		S32CC_SCMI_CLK(14)
-/* GMAC */
-#define S32CC_SCMI_CLK_GMAC0_TS			S32CC_SCMI_CLK(15)
+#define S32CC_SCMI_CLK_LINFLEX_XBAR	S32CC_SCMI_CLK(13)
+#define S32CC_SCMI_CLK_LINFLEX_LIN	S32CC_SCMI_CLK(14)
+#define S32CC_SCMI_CLK_GMAC0_TS		S32CC_SCMI_CLK(15)
 /* GMAC0 - SGMII */
 #define S32CC_SCMI_CLK_GMAC0_RX_SGMII	S32CC_SCMI_CLK(16)
 #define S32CC_SCMI_CLK_GMAC0_TX_SGMII	S32CC_SCMI_CLK(17)
@@ -49,114 +47,114 @@
 #define S32CC_SCMI_CLK_GMAC0_RX_RMII	S32CC_SCMI_CLK(20)
 #define S32CC_SCMI_CLK_GMAC0_TX_RMII	S32CC_SCMI_CLK(21)
 /* GMAC0 - MII */
-#define S32CC_SCMI_CLK_GMAC0_RX_MII		S32CC_SCMI_CLK(22)
-#define S32CC_SCMI_CLK_GMAC0_TX_MII		S32CC_SCMI_CLK(23)
-#define S32CC_SCMI_CLK_GMAC0_AXI		S32CC_SCMI_CLK(24)
-/* DSPI */
-#define S32CC_SCMI_CLK_SPI_REG			S32CC_SCMI_CLK(25)
-#define S32CC_SCMI_CLK_SPI_MODULE		S32CC_SCMI_CLK(26)
-/* QuadSPI */
-#define S32CC_SCMI_CLK_QUADSPI_REG		S32CC_SCMI_CLK(27)
-#define S32CC_SCMI_CLK_QUADSPI_AHB		S32CC_SCMI_CLK(28)
-#define S32CC_SCMI_CLK_QUADSPI_FLASH2X	S32CC_SCMI_CLK(29)
-#define S32CC_SCMI_CLK_QUADSPI_FLASH1X	S32CC_SCMI_CLK(30)
+#define S32CC_SCMI_CLK_GMAC0_RX_MII	S32CC_SCMI_CLK(22)
+#define S32CC_SCMI_CLK_GMAC0_TX_MII	S32CC_SCMI_CLK(23)
+#define S32CC_SCMI_CLK_GMAC0_AXI	S32CC_SCMI_CLK(24)
+/* SPI */
+#define S32CC_SCMI_CLK_SPI_REG		S32CC_SCMI_CLK(25)
+#define S32CC_SCMI_CLK_SPI_MODULE	S32CC_SCMI_CLK(26)
+/* QSPI */
+#define S32CC_SCMI_CLK_QSPI_REG		S32CC_SCMI_CLK(27)
+#define S32CC_SCMI_CLK_QSPI_AHB		S32CC_SCMI_CLK(28)
+#define S32CC_SCMI_CLK_QSPI_FLASH2X	S32CC_SCMI_CLK(29)
+#define S32CC_SCMI_CLK_QSPI_FLASH1X	S32CC_SCMI_CLK(30)
 /* uSDHC */
-#define S32CC_SCMI_CLK_USDHC_AHB		S32CC_SCMI_CLK(31)
-#define S32CC_SCMI_CLK_USDHC_MODULE		S32CC_SCMI_CLK(32)
-#define S32CC_SCMI_CLK_USDHC_CORE		S32CC_SCMI_CLK(33)
-#define S32CC_SCMI_CLK_USDHC_MOD32K		S32CC_SCMI_CLK(34)
+#define S32CC_SCMI_CLK_USDHC_AHB	S32CC_SCMI_CLK(31)
+#define S32CC_SCMI_CLK_USDHC_MODULE	S32CC_SCMI_CLK(32)
+#define S32CC_SCMI_CLK_USDHC_CORE	S32CC_SCMI_CLK(33)
+#define S32CC_SCMI_CLK_USDHC_MOD32K	S32CC_SCMI_CLK(34)
 /* DDR */
-#define S32CC_SCMI_CLK_DDR_REG			S32CC_SCMI_CLK(35)
-#define S32CC_SCMI_CLK_DDR_PLL_REF		S32CC_SCMI_CLK(36)
-#define S32CC_SCMI_CLK_DDR_AXI			S32CC_SCMI_CLK(37)
+#define S32CC_SCMI_CLK_DDR_REG		S32CC_SCMI_CLK(35)
+#define S32CC_SCMI_CLK_DDR_PLL_REF	S32CC_SCMI_CLK(36)
+#define S32CC_SCMI_CLK_DDR_AXI		S32CC_SCMI_CLK(37)
 /* SRAM */
-#define S32CC_SCMI_CLK_SRAM_AXI			S32CC_SCMI_CLK(38)
-#define S32CC_SCMI_CLK_SRAM_REG			S32CC_SCMI_CLK(39)
+#define S32CC_SCMI_CLK_SRAM_AXI		S32CC_SCMI_CLK(38)
+#define S32CC_SCMI_CLK_SRAM_REG		S32CC_SCMI_CLK(39)
 /* I2C */
-#define S32CC_SCMI_CLK_I2C_REG			S32CC_SCMI_CLK(40)
-#define S32CC_SCMI_CLK_I2C_MODULE		S32CC_SCMI_CLK(41)
+#define S32CC_SCMI_CLK_I2C_REG		S32CC_SCMI_CLK(40)
+#define S32CC_SCMI_CLK_I2C_MODULE	S32CC_SCMI_CLK(41)
 /* SIUL2 */
-#define S32CC_SCMI_CLK_SIUL2_REG		S32CC_SCMI_CLK(42)
-#define S32CC_SCMI_CLK_SIUL2_FILTER		S32CC_SCMI_CLK(43)
+#define S32CC_SCMI_CLK_SIUL2_REG	S32CC_SCMI_CLK(42)
+#define S32CC_SCMI_CLK_SIUL2_FILTER	S32CC_SCMI_CLK(43)
 /* CRC */
-#define S32CC_SCMI_CLK_CRC_REG			S32CC_SCMI_CLK(44)
-#define S32CC_SCMI_CLK_CRC_MODULE		S32CC_SCMI_CLK(45)
+#define S32CC_SCMI_CLK_CRC_REG		S32CC_SCMI_CLK(44)
+#define S32CC_SCMI_CLK_CRC_MODULE	S32CC_SCMI_CLK(45)
 /* EIM0 */
-#define S32CC_SCMI_CLK_EIM0_REG			S32CC_SCMI_CLK(46)
-#define S32CC_SCMI_CLK_EIM0_MODULE		S32CC_SCMI_CLK(47)
+#define S32CC_SCMI_CLK_EIM0_REG		S32CC_SCMI_CLK(46)
+#define S32CC_SCMI_CLK_EIM0_MODULE	S32CC_SCMI_CLK(47)
 /* EIM0 */
-#define S32CC_SCMI_CLK_EIM123_REG		S32CC_SCMI_CLK(48)
+#define S32CC_SCMI_CLK_EIM123_REG	S32CC_SCMI_CLK(48)
 #define S32CC_SCMI_CLK_EIM123_MODULE	S32CC_SCMI_CLK(49)
 /* EIM */
-#define S32CC_SCMI_CLK_EIM_REG			S32CC_SCMI_CLK(50)
-#define S32CC_SCMI_CLK_EIM_MODULE		S32CC_SCMI_CLK(51)
+#define S32CC_SCMI_CLK_EIM_REG		S32CC_SCMI_CLK(50)
+#define S32CC_SCMI_CLK_EIM_MODULE	S32CC_SCMI_CLK(51)
 /* FCCU */
-#define S32CC_SCMI_CLK_FCCU_MODULE		S32CC_SCMI_CLK(52)
-#define S32CC_SCMI_CLK_FCCU_SAFE		S32CC_SCMI_CLK(53)
+#define S32CC_SCMI_CLK_FCCU_MODULE	S32CC_SCMI_CLK(52)
+#define S32CC_SCMI_CLK_FCCU_SAFE	S32CC_SCMI_CLK(53)
 /* RTC */
-#define S32CC_SCMI_CLK_RTC_REG			S32CC_SCMI_CLK(54)
-#define S32CC_SCMI_CLK_RTC_SIRC			S32CC_SCMI_CLK(55)
-#define S32CC_SCMI_CLK_RTC_FIRC			S32CC_SCMI_CLK(56)
+#define S32CC_SCMI_CLK_RTC_REG		S32CC_SCMI_CLK(54)
+#define S32CC_SCMI_CLK_RTC_SIRC		S32CC_SCMI_CLK(55)
+#define S32CC_SCMI_CLK_RTC_FIRC		S32CC_SCMI_CLK(56)
 /* SWT */
-#define S32CC_SCMI_CLK_SWT_MODULE		S32CC_SCMI_CLK(57)
-#define S32CC_SCMI_CLK_SWT_COUNTER		S32CC_SCMI_CLK(58)
+#define S32CC_SCMI_CLK_SWT_MODULE	S32CC_SCMI_CLK(57)
+#define S32CC_SCMI_CLK_SWT_COUNTER	S32CC_SCMI_CLK(58)
 /* STM */
-#define S32CC_SCMI_CLK_STM_MODULE		S32CC_SCMI_CLK(59)
-#define S32CC_SCMI_CLK_STM_REG			S32CC_SCMI_CLK(60)
+#define S32CC_SCMI_CLK_STM_MODULE	S32CC_SCMI_CLK(59)
+#define S32CC_SCMI_CLK_STM_REG		S32CC_SCMI_CLK(60)
 /* PIT */
-#define S32CC_SCMI_CLK_PIT_MODULE		S32CC_SCMI_CLK(61)
-#define S32CC_SCMI_CLK_PIT_REG			S32CC_SCMI_CLK(62)
+#define S32CC_SCMI_CLK_PIT_MODULE	S32CC_SCMI_CLK(61)
+#define S32CC_SCMI_CLK_PIT_REG		S32CC_SCMI_CLK(62)
 /* eDMA */
-#define S32CC_SCMI_CLK_EDMA_MODULE		S32CC_SCMI_CLK(63)
-#define S32CC_SCMI_CLK_EDMA_AHB			S32CC_SCMI_CLK(64)
-/* SAR-ADC */
-#define S32CC_SCMI_CLK_SAR_ADC_BUS		S32CC_SCMI_CLK(65)
+#define S32CC_SCMI_CLK_EDMA_MODULE	S32CC_SCMI_CLK(63)
+#define S32CC_SCMI_CLK_EDMA_AHB		S32CC_SCMI_CLK(64)
+/* ADC */
+#define S32CC_SCMI_CLK_SAR_ADC_BUS	S32CC_SCMI_CLK(65)
 /* CMU */
-#define S32CC_SCMI_CLK_CMU_MODULE		S32CC_SCMI_CLK(66)
-#define S32CC_SCMI_CLK_CMU_REG			S32CC_SCMI_CLK(67)
+#define S32CC_SCMI_CLK_CMU_MODULE	S32CC_SCMI_CLK(66)
+#define S32CC_SCMI_CLK_CMU_REG		S32CC_SCMI_CLK(67)
 /* TMU */
-#define S32CC_SCMI_CLK_TMU_MODULE		S32CC_SCMI_CLK(68)
-#define S32CC_SCMI_CLK_TMU_REG			S32CC_SCMI_CLK(69)
+#define S32CC_SCMI_CLK_TMU_MODULE	S32CC_SCMI_CLK(68)
+#define S32CC_SCMI_CLK_TMU_REG		S32CC_SCMI_CLK(69)
 /* FlexRay */
-#define S32CC_SCMI_CLK_FR_REG			S32CC_SCMI_CLK(70)
-#define S32CC_SCMI_CLK_FR_PE			S32CC_SCMI_CLK(71)
+#define S32CC_SCMI_CLK_FR_REG		S32CC_SCMI_CLK(70)
+#define S32CC_SCMI_CLK_FR_PE		S32CC_SCMI_CLK(71)
 /* WKPU */
-#define S32CC_SCMI_CLK_WKPU_MODULE		S32CC_SCMI_CLK(72)
-#define S32CC_SCMI_CLK_WKPU_REG			S32CC_SCMI_CLK(73)
+#define S32CC_SCMI_CLK_WKPU_MODULE	S32CC_SCMI_CLK(72)
+#define S32CC_SCMI_CLK_WKPU_REG		S32CC_SCMI_CLK(73)
 /* SRC */
-#define S32CC_SCMI_CLK_SRC_MODULE		S32CC_SCMI_CLK(74)
-#define S32CC_SCMI_CLK_SRC_REG			S32CC_SCMI_CLK(75)
+#define S32CC_SCMI_CLK_SRC_MODULE	S32CC_SCMI_CLK(74)
+#define S32CC_SCMI_CLK_SRC_REG		S32CC_SCMI_CLK(75)
 /* SRC-TOP */
 #define S32CC_SCMI_CLK_SRC_TOP_MODULE	S32CC_SCMI_CLK(76)
-#define S32CC_SCMI_CLK_SRC_TOP_REG		S32CC_SCMI_CLK(77)
+#define S32CC_SCMI_CLK_SRC_TOP_REG	S32CC_SCMI_CLK(77)
 /* CTU */
-#define S32CC_SCMI_CLK_CTU_MODULE		S32CC_SCMI_CLK(78)
-#define S32CC_SCMI_CLK_CTU_CTU			S32CC_SCMI_CLK(79)
+#define S32CC_SCMI_CLK_CTU_MODULE	S32CC_SCMI_CLK(78)
+#define S32CC_SCMI_CLK_CTU_CTU		S32CC_SCMI_CLK(79)
 /* DBG */
-#define S32CC_SCMI_CLK_DBG_SYS4			S32CC_SCMI_CLK(80)
-#define S32CC_SCMI_CLK_DBG_SYS2			S32CC_SCMI_CLK(81)
+#define S32CC_SCMI_CLK_DBG_SYS4		S32CC_SCMI_CLK(80)
+#define S32CC_SCMI_CLK_DBG_SYS2		S32CC_SCMI_CLK(81)
 /* Cortex-M7 */
-#define S32CC_SCMI_CLK_M7_CORE			S32CC_SCMI_CLK(82)
+#define S32CC_SCMI_CLK_M7_CORE		S32CC_SCMI_CLK(82)
 /* DMAMUX */
 #define S32CC_SCMI_CLK_DMAMUX_MODULE	S32CC_SCMI_CLK(83)
-#define S32CC_SCMI_CLK_DMAMUX_REG		S32CC_SCMI_CLK(84)
+#define S32CC_SCMI_CLK_DMAMUX_REG	S32CC_SCMI_CLK(84)
 /* GIC */
-#define S32CC_SCMI_CLK_GIC_MODULE		S32CC_SCMI_CLK(85)
+#define S32CC_SCMI_CLK_GIC_MODULE	S32CC_SCMI_CLK(85)
 /* MSCM */
-#define S32CC_SCMI_CLK_MSCM_MODULE		S32CC_SCMI_CLK(86)
-#define S32CC_SCMI_CLK_MSCM_REG			S32CC_SCMI_CLK(87)
+#define S32CC_SCMI_CLK_MSCM_MODULE	S32CC_SCMI_CLK(86)
+#define S32CC_SCMI_CLK_MSCM_REG		S32CC_SCMI_CLK(87)
 /* SEMA42 */
 #define S32CC_SCMI_CLK_SEMA42_MODULE	S32CC_SCMI_CLK(88)
-#define S32CC_SCMI_CLK_SEMA42_REG		S32CC_SCMI_CLK(89)
+#define S32CC_SCMI_CLK_SEMA42_REG	S32CC_SCMI_CLK(89)
 /* XRDC */
-#define S32CC_SCMI_CLK_XRDC_MODULE		S32CC_SCMI_CLK(90)
-#define S32CC_SCMI_CLK_XRDC_REG			S32CC_SCMI_CLK(91)
+#define S32CC_SCMI_CLK_XRDC_MODULE	S32CC_SCMI_CLK(90)
+#define S32CC_SCMI_CLK_XRDC_REG		S32CC_SCMI_CLK(91)
 /* CLKOUT */
-#define S32CC_SCMI_CLK_CLKOUT_0			S32CC_SCMI_CLK(92)
-#define S32CC_SCMI_CLK_CLKOUT_1			S32CC_SCMI_CLK(93)
+#define S32CC_SCMI_CLK_CLKOUT_0		S32CC_SCMI_CLK(92)
+#define S32CC_SCMI_CLK_CLKOUT_1		S32CC_SCMI_CLK(93)
 
-#define S32CC_SCMI_PLAT_CLK_BASE_ID		S32CC_SCMI_CLK(94)
+#define S32CC_SCMI_PLAT_CLK_BASE_ID	S32CC_SCMI_CLK(94)
 
-#define S32CC_SCMI_CLK_MAX_ID			S32CC_PLAT_SCMI_CLK(33)
+#define S32CC_SCMI_CLK_MAX_ID		S32CC_PLAT_SCMI_CLK(33)
 
-#endif /* __DT_BINDINGS_SCMI_CLOCK_S32CC_H */
+#endif
diff --git a/include/dt-bindings/clock/s32g-scmi-clock.h b/include/dt-bindings/clock/s32g-scmi-clock.h
index 98ac28aee..386063864 100644
--- a/include/dt-bindings/clock/s32g-scmi-clock.h
+++ b/include/dt-bindings/clock/s32g-scmi-clock.h
@@ -1,8 +1,7 @@
 /* SPDX-License-Identifier: BSD-3-Clause */
 /*
- * Copyright 2020-2021, 2023-2024 NXP
+ * Copyright 2020-2021, 2023 NXP
  */
-
 #ifndef __DT_BINDINGS_SCMI_CLOCK_S32G_H
 #define __DT_BINDINGS_SCMI_CLOCK_S32G_H
 
@@ -11,6 +10,7 @@
 /* USB */
 #define S32G_SCMI_CLK_USB_MEM			S32CC_PLAT_SCMI_CLK(0)
 #define S32G_SCMI_CLK_USB_LOW			S32CC_PLAT_SCMI_CLK(1)
+
 /* PFE 0 */
 /* SGMII RX: PFE_MAC_0_RX_CLK -> SERDES_1_LANE_0_CDR_CLK */
 #define S32G_SCMI_CLK_PFE0_RX_SGMII		S32CC_PLAT_SCMI_CLK(2)
@@ -70,4 +70,4 @@
 #error Please increase the value of S32CC_SCMI_CLK_MAX_ID
 #endif
 
-#endif /* __DT_BINDINGS_SCMI_CLOCK_S32G_H */
+#endif
diff --git a/include/dt-bindings/clock/s32r45-scmi-clock.h b/include/dt-bindings/clock/s32r45-scmi-clock.h
index 25779cd91..1443f621a 100644
--- a/include/dt-bindings/clock/s32r45-scmi-clock.h
+++ b/include/dt-bindings/clock/s32r45-scmi-clock.h
@@ -1,36 +1,34 @@
-/* SPDX-License-Identifier: GPL-2.0-only OR BSD-3-Clause */
+/* SPDX-License-Identifier: BSD-3-Clause */
 /*
- * Copyright 2021-2024 NXP
+ * Copyright 2021-2023 NXP
  */
-
 #ifndef __DT_BINDINGS_SCMI_CLOCK_S32R45_H
 #define __DT_BINDINGS_SCMI_CLOCK_S32R45_H
 
 #include <dt-bindings/clock/s32cc-scmi-clock.h>
 
 /* LAX 0 */
-#define S32R45_SCMI_CLK_LAX_0_MODULE			S32CC_PLAT_SCMI_CLK(0)
+#define S32R45_SCMI_CLK_LAX_0_MODULE		S32CC_PLAT_SCMI_CLK(0)
 /* LAX 1 */
-#define S32R45_SCMI_CLK_LAX_1_MODULE			S32CC_PLAT_SCMI_CLK(1)
+#define S32R45_SCMI_CLK_LAX_1_MODULE		S32CC_PLAT_SCMI_CLK(1)
 /* SPT */
-#define S32R45_SCMI_CLK_SPT_SPT					S32CC_PLAT_SCMI_CLK(2)
-#define S32R45_SCMI_CLK_SPT_AXI					S32CC_PLAT_SCMI_CLK(3)
-#define S32R45_SCMI_CLK_SPT_MODULE				S32CC_PLAT_SCMI_CLK(4)
-/* GMAC */
-#define S32R45_SCMI_CLK_GMAC1_TS				S32CC_PLAT_SCMI_CLK(5)
+#define S32R45_SCMI_CLK_SPT_SPT			S32CC_PLAT_SCMI_CLK(2)
+#define S32R45_SCMI_CLK_SPT_AXI			S32CC_PLAT_SCMI_CLK(3)
+#define S32R45_SCMI_CLK_SPT_MODULE		S32CC_PLAT_SCMI_CLK(4)
+#define S32R45_SCMI_CLK_GMAC1_TS		S32CC_PLAT_SCMI_CLK(5)
 /* GMAC1 - SGMII */
-#define S32R45_SCMI_CLK_GMAC1_RX_SGMII			S32CC_PLAT_SCMI_CLK(6)
-#define S32R45_SCMI_CLK_GMAC1_TX_SGMII			S32CC_PLAT_SCMI_CLK(7)
+#define S32R45_SCMI_CLK_GMAC1_RX_SGMII		S32CC_PLAT_SCMI_CLK(6)
+#define S32R45_SCMI_CLK_GMAC1_TX_SGMII		S32CC_PLAT_SCMI_CLK(7)
 /* GMAC1 - RGMII */
-#define S32R45_SCMI_CLK_GMAC1_RX_RGMII			S32CC_PLAT_SCMI_CLK(8)
-#define S32R45_SCMI_CLK_GMAC1_TX_RGMII			S32CC_PLAT_SCMI_CLK(9)
+#define S32R45_SCMI_CLK_GMAC1_RX_RGMII		S32CC_PLAT_SCMI_CLK(8)
+#define S32R45_SCMI_CLK_GMAC1_TX_RGMII		S32CC_PLAT_SCMI_CLK(9)
 /* GMAC1 - RMII */
-#define S32R45_SCMI_CLK_GMAC1_RX_RMII			S32CC_PLAT_SCMI_CLK(10)
-#define S32R45_SCMI_CLK_GMAC1_TX_RMII			S32CC_PLAT_SCMI_CLK(11)
+#define S32R45_SCMI_CLK_GMAC1_RX_RMII		S32CC_PLAT_SCMI_CLK(10)
+#define S32R45_SCMI_CLK_GMAC1_TX_RMII		S32CC_PLAT_SCMI_CLK(11)
 /* GMAC1 - MII */
-#define S32R45_SCMI_CLK_GMAC1_RX_MII			S32CC_PLAT_SCMI_CLK(12)
-#define S32R45_SCMI_CLK_GMAC1_TX_MII			S32CC_PLAT_SCMI_CLK(13)
-#define S32R45_SCMI_CLK_GMAC1_AXI				S32CC_PLAT_SCMI_CLK(14)
+#define S32R45_SCMI_CLK_GMAC1_RX_MII		S32CC_PLAT_SCMI_CLK(12)
+#define S32R45_SCMI_CLK_GMAC1_TX_MII		S32CC_PLAT_SCMI_CLK(13)
+#define S32R45_SCMI_CLK_GMAC1_AXI		S32CC_PLAT_SCMI_CLK(14)
 /* MIPICSI2 0 */
 #define S32R45_SCMI_CLK_MIPICSI2_0_CFG			S32CC_PLAT_SCMI_CLK(15)
 #define S32R45_SCMI_CLK_MIPICSI2_0_DPHY_ESC		S32CC_PLAT_SCMI_CLK(16)
@@ -64,10 +62,10 @@
 #define S32R45_SCMI_CLK_MIPICSI2_3_CTRL			S32CC_PLAT_SCMI_CLK(41)
 #define S32R45_SCMI_CLK_MIPICSI2_3_AXI			S32CC_PLAT_SCMI_CLK(42)
 /* CTE */
-#define S32R45_SCMI_CLK_CTE_REG_INTF			S32CC_PLAT_SCMI_CLK(43)
-#define S32R45_SCMI_CLK_CTE						S32CC_PLAT_SCMI_CLK(44)
+#define S32R45_SCMI_CLK_CTE_REG_INTF		S32CC_PLAT_SCMI_CLK(43)
+#define S32R45_SCMI_CLK_CTE					S32CC_PLAT_SCMI_CLK(44)
 /* BBE32EP DSP */
-#define S32R45_SCMI_CLK_EIM_DSP					S32CC_PLAT_SCMI_CLK(45)
-#define S32R45_SCMI_CLK_BBE32EP_DSP				S32CC_PLAT_SCMI_CLK(46)
+#define S32R45_SCMI_CLK_EIM_DSP				S32CC_PLAT_SCMI_CLK(45)
+#define S32R45_SCMI_CLK_BBE32EP_DSP			S32CC_PLAT_SCMI_CLK(46)
 
-#endif /* __DT_BINDINGS_SCMI_CLOCK_S32R45_H */
+#endif
diff --git a/include/dt-bindings/mux/nxp-s32g-can-ts.h b/include/dt-bindings/mux/nxp-s32g-can-ts.h
index c95716140..02272715c 100644
--- a/include/dt-bindings/mux/nxp-s32g-can-ts.h
+++ b/include/dt-bindings/mux/nxp-s32g-can-ts.h
@@ -1,10 +1,9 @@
-/* SPDX-License-Identifier: GPL-2.0-only OR BSD-3-Clause */
+/* SPDX-License-Identifier: GPL-2.0 */
 /*
- * Copyright 2023-2024 NXP
+ * Copyright 2023 NXP
  *
  * This header provides constants for CAN timestamp sources for NXP S32G SoCs
  */
-
 #ifndef _DT_BINDINGS_MUX_NXP_S32G_CAN_TS
 #define _DT_BINDINGS_MUX_NXP_S32G_CAN_TS
 
diff --git a/include/dt-bindings/mux/nxp-s32r45-can-ts.h b/include/dt-bindings/mux/nxp-s32r45-can-ts.h
index 631fae662..795d08cc0 100644
--- a/include/dt-bindings/mux/nxp-s32r45-can-ts.h
+++ b/include/dt-bindings/mux/nxp-s32r45-can-ts.h
@@ -1,16 +1,15 @@
-/* SPDX-License-Identifier: GPL-2.0-only OR BSD-3-Clause */
+/* SPDX-License-Identifier: GPL-2.0 */
 /*
- * Copyright 2023-2024 NXP
+ * Copyright 2023 NXP
  *
  * This header provides constants for CAN timestamp sources for NXP S32R45 SoCs
  */
-
 #ifndef _DT_BINDINGS_MUX_NXP_S32R45_CAN_TS
 #define _DT_BINDINGS_MUX_NXP_S32R45_CAN_TS
 
 #define S32R45_CAN_TS_DISABLE		0x0
 #define S32R45_CAN_TS_GMAC0_PTP		0x4
 #define S32R45_CAN_TS_GMAC1_PTP		0x5
-#define S32R45_CAN_TS_STM7			0x6
+#define S32R45_CAN_TS_STM7		0x6
 
 #endif
diff --git a/include/dt-bindings/net/s32g-pfe.h b/include/dt-bindings/net/s32g-pfe.h
index be7190eb4..6e082f1fb 100644
--- a/include/dt-bindings/net/s32g-pfe.h
+++ b/include/dt-bindings/net/s32g-pfe.h
@@ -1,6 +1,6 @@
 /* SPDX-License-Identifier: GPL-2.0 */
 /*
- * Copyright 2021-2024 NXP
+ * Copyright 2021-2023 NXP
  *
  */
 
@@ -17,9 +17,9 @@
 #define PFE_PHYIF_EMAC_1		1
 #define PFE_PHYIF_EMAC_2		2
 #define PFE_PHYIF_HIF_NOCPY		4
-#define PFE_PHYIF_HIF_0			6
-#define PFE_PHYIF_HIF_1			7
-#define PFE_PHYIF_HIF_2			8
-#define PFE_PHYIF_HIF_3			9
+#define PFE_PHYIF_HIF_0		6
+#define PFE_PHYIF_HIF_1		7
+#define PFE_PHYIF_HIF_2		8
+#define PFE_PHYIF_HIF_3		9
 
 #endif /* __DT_BINDINGS_NET_S32G_PFE_H__ */
diff --git a/include/dt-bindings/nvmem/s32cc-scmi-nvmem.h b/include/dt-bindings/nvmem/s32cc-scmi-nvmem.h
index 5931d6934..4b61fed36 100644
--- a/include/dt-bindings/nvmem/s32cc-scmi-nvmem.h
+++ b/include/dt-bindings/nvmem/s32cc-scmi-nvmem.h
@@ -1,6 +1,6 @@
-/* SPDX-License-Identifier: GPL-2.0-only OR BSD-3-Clause */
+/* SPDX-License-Identifier: GPL-2.0+ OR BSD-3-Clause */
 /*
- * Copyright 2023-2024 NXP
+ * Copyright 2023 NXP
  */
 
 #ifndef S32CC_SCMI_NVMEM_H
@@ -11,28 +11,28 @@
  * Register(s): SIUL2_0 - MIDR1[31:26]
  * Description: Returns the ASCII code for the SoC Letter (e.g. 'G' -> 71).
  */
-#define S32CC_SCMI_NVMEM_SOC_LETTER			(0x0)
+#define S32CC_SCMI_NVMEM_SOC_LETTER			0x0
 
 /*
  * Commands: Read
  * Register(s): SIUL2_0 - MIDR1[25:16]
  * Description: Returns the SoC Part Number (e.g.: 399).
  */
-#define S32CC_SCMI_NVMEM_SOC_PART_NO		(0x1)
+#define S32CC_SCMI_NVMEM_SOC_PART_NO			0x1
 
 /*
  * Commands: Read
  * Register(s): SIUL2_0 - MIDR1[7:4]
  * Description: Returns the MAJOR field of the SoC Revision (e.g.: 1).
  */
-#define S32CC_SCMI_NVMEM_SOC_MAJOR			(0x2)
+#define S32CC_SCMI_NVMEM_SOC_MAJOR			0x2
 
 /*
  * Commands: Read
  * Register(s): SIUL2_0 - MIDR1[3:0]
  * Description: Returns the MINOR field of the SoC Revision (e.g.: 1).
  */
-#define S32CC_SCMI_NVMEM_SOC_MINOR			(0x3)
+#define S32CC_SCMI_NVMEM_SOC_MINOR			0x3
 
 /*
  * Commands: Read
@@ -40,7 +40,7 @@
  * Description: Returns the FREQUENCY field from the reg, translated according
    to the SoC's Reference Manual (e.g.: 1000MHz -> 0b1011).
  */
-#define S32CC_SCMI_NVMEM_CORE_MAX_FREQ		(0x4)
+#define S32CC_SCMI_NVMEM_CORE_MAX_FREQ			0x4
 
 /*
  * Commands: Read
@@ -48,7 +48,7 @@
  * Description: Returns the PCIe Device ID based on the SoC Part Number (e.g.:
    for S32G399 -> 0x0).
  */
-#define S32CC_SCMI_NVMEM_PCIE_DEV_ID		(0x5)
+#define S32CC_SCMI_NVMEM_PCIE_DEV_ID			0x5
 
 /*
  * Commands: Read
@@ -56,7 +56,7 @@
  * Description: Returns the SerDes presence (SerDes not present -> 0,
    SerDes present -> 1).
  */
-#define S32CC_SCMI_NVMEM_SERDES_PRESENCE	(0x6)
+#define S32CC_SCMI_NVMEM_SERDES_PRESENCE		0x6
 
 /*
  * Commands: Read
@@ -64,7 +64,7 @@
  * Description: Returns the SUBMINOR field of the SoC Revision, if applicable
    (e.g.: 0).
  */
-#define S32CC_SCMI_NVMEM_SOC_SUBMINOR		(0x7)
+#define S32CC_SCMI_NVMEM_SOC_SUBMINOR			0x7
 
 /*
  * Commands: Read
@@ -73,7 +73,7 @@
    mentioned registers, and also clears it by writing a non-zero value to
    MC_RGM - DES[31:0].
  */
-#define S32CC_SCMI_NVMEM_RESET_CAUSE		(0x8)
+#define S32CC_SCMI_NVMEM_RESET_CAUSE			0x8
 
 /*
  * Commands: Read
@@ -81,7 +81,7 @@
  * Description: Returns the value of the lockstep enable bit for the A53
    clusters (lockstep disabled -> 0, lockstep enabled -> 1).
  */
-#define S32CC_SCMI_NVMEM_LOCKSTEP_ENABLED	(0x9)
+#define S32CC_SCMI_NVMEM_LOCKSTEP_ENABLED		0x9
 
 /*
  * Commands: Write
@@ -89,7 +89,7 @@
  * Description: Writes 0/1 to the mentioned register, which disables/enables
    the DDR PMU (Monitor Counter Full) IRQ.
  */
-#define S32CC_SCMI_NVMEM_DDR_PMU_IRQ		(0xA)
+#define S32CC_SCMI_NVMEM_DDR_PMU_IRQ                    0xA
 
 /*
  * Commands: Write
@@ -97,7 +97,7 @@
  * Description: Writes a 4-bit value to the mentioned register, which selects
    the GMAC0 PHY Interface Mode (e.g.: RGMII -> 0b0010).
  */
-#define S32CC_SCMI_NVMEM_GMAC0_PHY_INTF_SEL	(0xB)
+#define S32CC_SCMI_NVMEM_GMAC0_PHY_INTF_SEL             0xB
 
 /*
  * Commands: Write
@@ -105,7 +105,7 @@
  * Description: Writes a 12-bit value to the mentioned register, which selects
    the PFE EMACs PHY Interface Mode, 4 bits for each EMAC.
  */
-#define S32CC_SCMI_NVMEM_PFE_EMACS_INTF_SEL	(0xC)
+#define S32CC_SCMI_NVMEM_PFE_EMACS_INTF_SEL             0xC
 
 /*
  * Commands: Read/Write
@@ -114,7 +114,7 @@
    which selects the PFE Coherency Mode. Values explained in the SoC Reference
    Manual.
  */
-#define S32CC_SCMI_NVMEM_PFE_COH_EN			(0xD)
+#define S32CC_SCMI_NVMEM_PFE_COH_EN                     0xD
 
 /*
  * Commands: Write
@@ -122,7 +122,7 @@
  * Description: Writes a 9-bit value to the mentioned register, which drives
    the PFE Subsystem signals. Values explained in the SoC Reference Manual.
  */
-#define S32CC_SCMI_NVMEM_PFE_PWR_CTRL		(0xE)
+#define S32CC_SCMI_NVMEM_PFE_PWR_CTRL                   0xE
 
 /*
  * Commands: Write
@@ -130,7 +130,7 @@
  * Description: Writes a 3-bit value to the mentioned register, where each bit
    selects if corresponding EMAC runs or not in SGMII mode.
  */
-#define S32CC_SCMI_NVMEM_PFE_EMACS_GENCTRL1	(0xF)
+#define S32CC_SCMI_NVMEM_PFE_EMACS_GENCTRL1             0xF
 
 /*
  * Commands: Read/Write
@@ -138,7 +138,7 @@
  * Descripition: Reads/Writes a 1-bit value from/to the mentioned register, only
    used for communication between PFE Master and Slave instances.
  */
-#define S32CC_SCMI_NVMEM_PFE_GENCTRL3		(0x10)
+#define S32CC_SCMI_NVMEM_PFE_GENCTRL3                   0x10
 
 /*
  * Commands: Write
@@ -146,7 +146,7 @@
  * Description: Writes a 1-bit value to the mentioned register, for enabling/
    disabling the DDR IO retention (0 -> enabled, 1 -> disabled).
  */
-#define S32CC_SCMI_NVMEM_DDR_RET_CTRL		(0x11)
+#define S32CC_SCMI_NVMEM_DDR_RET_CTRL			0x11
 
 /*
  * Commands: Write
@@ -155,10 +155,10 @@
    disabling the Memory Data retention while in Standby mode
    (0 -> disabled, 1 -> enabled).
  */
-#define S32CC_SCMI_NVMEM_DDR_MEM_RET		(0x12)
+#define S32CC_SCMI_NVMEM_DDR_MEM_RET			0x12
 
-#define S32CC_SCMI_NVMEM_MAX				(0x13)
+#define S32CC_SCMI_NVMEM_MAX				0x13
 
-#define S32CC_SCMI_NVMEM_CELL_SIZE			(0x4)
+#define S32CC_SCMI_NVMEM_CELL_SIZE			0x4
 
 #endif
diff --git a/include/dt-bindings/nvmem/s32g-gpr-nvmem.h b/include/dt-bindings/nvmem/s32g-gpr-nvmem.h
index 8df128d5f..06aed108d 100644
--- a/include/dt-bindings/nvmem/s32g-gpr-nvmem.h
+++ b/include/dt-bindings/nvmem/s32g-gpr-nvmem.h
@@ -1,17 +1,16 @@
-/* SPDX-License-Identifier: GPL-2.0-only OR BSD-3-Clause */
+/* SPDX-License-Identifier: GPL-2.0+ OR BSD-3-Clause */
 /*
- * Copyright 2023-2024 NXP
+ * Copyright 2023 NXP
  */
-
 #ifndef S32G_GPR_NVMEM_H
 #define S32G_GPR_NVMEM_H
 
-#define S32G_GPR_PFE_EMACS_INTF_SEL_OFFSET      (0x80)
-#define S32G_GPR_PFE_COH_EN_OFFSET              (0x81)
-#define S32G_GPR_PFE_PWR_CTRL_OFFSET            (0x82)
-#define S32G_GPR_PFE_EMACS_GENCTRL1_OFFSET      (0x83)
-#define S32G_GPR_PFE_GENCTRL3_OFFSET            (0x84)
+#define S32G_GPR_PFE_EMACS_INTF_SEL_OFFSET      0x80
+#define S32G_GPR_PFE_COH_EN_OFFSET              0x81
+#define S32G_GPR_PFE_PWR_CTRL_OFFSET            0x82
+#define S32G_GPR_PFE_EMACS_GENCTRL1_OFFSET      0x83
+#define S32G_GPR_PFE_GENCTRL3_OFFSET            0x84
 
-#define S32G_GPR_CELL_SIZE                      (0x4)
+#define S32G_GPR_CELL_SIZE                      0x4
 
 #endif
diff --git a/include/dt-bindings/nvmem/s32r45-gpr-nvmem.h b/include/dt-bindings/nvmem/s32r45-gpr-nvmem.h
index 70256bfaf..2f41687a4 100644
--- a/include/dt-bindings/nvmem/s32r45-gpr-nvmem.h
+++ b/include/dt-bindings/nvmem/s32r45-gpr-nvmem.h
@@ -1,13 +1,12 @@
-/* SPDX-License-Identifier: GPL-2.0-only OR BSD-3-Clause */
+/* SPDX-License-Identifier: GPL-2.0+ OR BSD-3-Clause */
 /*
- * Copyright 2023-2024 NXP
+ * Copyright 2023 NXP
  */
-
 #ifndef S32R45_GPR_NVMEM_H
 #define S32R45_GPR_NVMEM_H
 
-#define S32R45_GPR_GMAC1_PHY_INTF_SEL_OFFSET    (0x100)
+#define S32R45_GPR_GMAC1_PHY_INTF_SEL_OFFSET    0x100
 
-#define S32R45_GPR_CELL_SIZE                    (0x4)
+#define S32R45_GPR_CELL_SIZE                    0x4
 
 #endif
diff --git a/include/dt-bindings/perf/s32cc-scmi-perf.h b/include/dt-bindings/perf/s32cc-scmi-perf.h
index def88be7d..f2b66c440 100644
--- a/include/dt-bindings/perf/s32cc-scmi-perf.h
+++ b/include/dt-bindings/perf/s32cc-scmi-perf.h
@@ -1,15 +1,14 @@
-/* SPDX-License-Identifier: GPL-2.0-only OR BSD-3-Clause */
+/* SPDX-License-Identifier: BSD-3-Clause */
 /*
- * Copyright 2022-2024 NXP
+ * Copyright 2022-2023 NXP
  */
-
 #ifndef __DT_BINDINGS_SCMI_PERF_S32CC_H
 #define __DT_BINDINGS_SCMI_PERF_S32CC_H
 
 #define S32CC_SCMI_PERF_BASE_ID		0U
-#define S32CC_SCMI_PERF(N)			((N) + S32CC_SCMI_PERF_BASE_ID)
+#define S32CC_SCMI_PERF(N)		((N) + S32CC_SCMI_PERF_BASE_ID)
 
-#define S32CC_SCMI_PERF_A53			S32CC_SCMI_PERF(0)
+#define S32CC_SCMI_PERF_A53		S32CC_SCMI_PERF(0)
 
 #define S32CC_SCMI_PERF_MAX_ID		S32CC_SCMI_PERF(1)
 
diff --git a/include/dt-bindings/pinctrl/s32cc-pinfunc.h b/include/dt-bindings/pinctrl/s32cc-pinfunc.h
index 44b2f6201..9c97e6cad 100644
--- a/include/dt-bindings/pinctrl/s32cc-pinfunc.h
+++ b/include/dt-bindings/pinctrl/s32cc-pinfunc.h
@@ -1,6 +1,6 @@
 /* SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause) */
 /*
- * Copyright 2022-2024 NXP
+ * Copyright 2022-2023 NXP
  */
 
 #ifndef _DT_BINDINGS_S32CC_PINFUNC_H
@@ -33,4 +33,4 @@
 #define S32CC_GPIO_3V3_SLEW_50MHZ	5
 #define S32CC_GPIO_3V3_SLEW_1MHZ	7
 
-#endif /* _DT_BINDINGS_S32CC_PINFUNC_H */
+#endif
diff --git a/include/dt-bindings/reset/s32cc-scmi-reset.h b/include/dt-bindings/reset/s32cc-scmi-reset.h
index 7b254b400..13606f7be 100644
--- a/include/dt-bindings/reset/s32cc-scmi-reset.h
+++ b/include/dt-bindings/reset/s32cc-scmi-reset.h
@@ -1,8 +1,7 @@
-/* SPDX-License-Identifier: GPL-2.0-only OR BSD-3-Clause */
+/* SPDX-License-Identifier: BSD-3-Clause */
 /*
- * Copyright 2021, 2023-2024 NXP
+ * Copyright 2021, 2023 NXP
  */
-
 #ifndef __DT_BINDINGS_S32CC_SCMI_RESET_H
 #define __DT_BINDINGS_S32CC_SCMI_RESET_H
 
@@ -30,4 +29,5 @@
 #define S32CC_SCMI_PLAT_RST_BASE_ID	S32CC_SCMI_RST(16)
 #define S32CC_SCMI_RST_MAX_ID		S32CC_PLAT_SCMI_RST(7)
 
-#endif /* __DT_BINDINGS_S32CC_SCMI_RESET_H */
+#endif
+
diff --git a/include/dt-bindings/reset/s32g-scmi-reset.h b/include/dt-bindings/reset/s32g-scmi-reset.h
index ff784a394..ba0bd8588 100644
--- a/include/dt-bindings/reset/s32g-scmi-reset.h
+++ b/include/dt-bindings/reset/s32g-scmi-reset.h
@@ -1,6 +1,6 @@
 /* SPDX-License-Identifier: BSD-3-Clause */
 /*
- * Copyright 2021, 2023-2024 NXP
+ * Copyright 2021, 2023 NXP
  */
 #ifndef __DT_BINDINGS_S32G_SCMI_RESET_H
 #define __DT_BINDINGS_S32G_SCMI_RESET_H
@@ -16,3 +16,4 @@
 #endif
 
 #endif
+
diff --git a/plat/nxp/s32/s32_scp_utils.c b/plat/nxp/s32/s32_scp_utils.c
index 22a0dc1c0..9cfc0e4d0 100644
--- a/plat/nxp/s32/s32_scp_utils.c
+++ b/plat/nxp/s32/s32_scp_utils.c
@@ -1,6 +1,6 @@
 // SPDX-License-Identifier: BSD-3-Clause
 /*
- * Copyright 2022-2024 NXP
+ * Copyright 2022-2023 NXP
  */
 
 #include <s32_bl_common.h>
@@ -304,19 +304,19 @@ static int scp_enable_qspi_clock(void)
 {
 	int ret;
 
-	ret = scp_scmi_clk_set_config_enable(S32CC_SCMI_CLK_QUADSPI_FLASH1X);
+	ret = scp_scmi_clk_set_config_enable(S32CC_SCMI_CLK_QSPI_FLASH1X);
 	if (ret)
 		return ret;
 
-	ret = scp_scmi_clk_set_config_enable(S32CC_SCMI_CLK_QUADSPI_FLASH2X);
+	ret = scp_scmi_clk_set_config_enable(S32CC_SCMI_CLK_QSPI_FLASH2X);
 	if (ret)
 		return ret;
 
-	ret = scp_scmi_clk_set_config_enable(S32CC_SCMI_CLK_QUADSPI_REG);
+	ret = scp_scmi_clk_set_config_enable(S32CC_SCMI_CLK_QSPI_REG);
 	if (ret)
 		return ret;
 
-	return scp_scmi_clk_set_config_enable(S32CC_SCMI_CLK_QUADSPI_AHB);
+	return scp_scmi_clk_set_config_enable(S32CC_SCMI_CLK_QSPI_AHB);
 }
 
 static int scp_set_ddr_clock_state(bool enable)
-- 
2.34.1

